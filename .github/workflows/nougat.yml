name: NougatMaker CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [self-hosted, arm64]
    env:
      ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      CODE_SIGN_CERT_BASE64: ${{ secrets.CODE_SIGN_CERT_BASE64 }}
      CODE_SIGN_PFX_PASS: ${{ secrets.CODE_SIGN_PFX_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: .NET SDK info
        run: dotnet --info

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Compute prerelease version suffix
        id: suffix
        run: |
          BR="${GITHUB_REF_NAME:-unknown}"
          if [ "$BR" = "main" ] || [ "$BR" = "master" ]; then
            echo "VERSION_SUFFIX=" >> $GITHUB_ENV
            echo "No suffix for $BR"
          else
            norm=$(echo "$BR" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]' | cut -c1-15)
            echo "VERSION_SUFFIX=alpha.${norm}.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
            echo "Using suffix: alpha.${norm}.${GITHUB_RUN_NUMBER}"
          fi

      - name: Add Artifactory NuGet source (optional)
        shell: bash
        env:
          NUGET_ALL_REPO: https://artifactory.fiks.ks.no/artifactory/api/nuget/nuget-all
        run: |
          if [ -n "${ARTIFACTORY_USERNAME:-}" ] && [ -n "${ARTIFACTORY_PASSWORD:-}" ]; then
            dotnet nuget add source "$NUGET_ALL_REPO" -n nuget-all -u "$ARTIFACTORY_USERNAME" -p "$ARTIFACTORY_PASSWORD" --store-password-in-clear-text || true
          else
            echo "Artifactory credentials not set; skipping source add"
          fi

      - name: Restore
        run: |
          dotnet restore NougatMaker/NougatMaker.csproj --nologo --verbosity minimal

      - name: Build Release
        run: |
          EXTRA=""
          if [ -n "${VERSION_SUFFIX}" ]; then EXTRA="--version-suffix ${VERSION_SUFFIX}"; fi
          dotnet build NougatMaker/NougatMaker.csproj -c Release --no-restore --nologo --verbosity normal $EXTRA

      - name: Pack library
        run: |
          mkdir -p artifacts
          EXTRA=""
          if [ -n "${VERSION_SUFFIX}" ]; then EXTRA="--version-suffix ${VERSION_SUFFIX}"; fi
          dotnet pack NougatMaker/NougatMaker.csproj -c Release --no-build -o artifacts $EXTRA

      - name: Sign NuGet package(s) (optional)
        shell: bash
        run: |
          if [ -n "${CODE_SIGN_CERT_BASE64:-}" ] && [ -n "${CODE_SIGN_PFX_PASS:-}" ]; then
            echo "$CODE_SIGN_CERT_BASE64" | base64 -d > ks-code-sign.pfx
            dotnet nuget sign artifacts/*.nupkg \
              --timestamper http://timestamp.digicert.com \
              --certificate-path ks-code-sign.pfx \
              --certificate-password "$CODE_SIGN_PFX_PASS" -v detailed
          else
            echo "Signing secrets not set; skipping signing"
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: |
            artifacts/*.nupkg
            artifacts/*.snupkg

      - name: Push to Artifactory (optional)
        shell: bash
        run: |
          if [ -n "${ARTIFACTORY_USERNAME:-}" ] && [ -n "${ARTIFACTORY_PASSWORD:-}" ]; then
            dotnet nuget push artifacts/*.nupkg --source nuget-all --skip-duplicate
          else
            echo "Artifactory credentials not set; skipping push"
          fi

      - name: Remove Artifactory NuGet source (optional)
        shell: bash
        run: |
          if [ -n "${ARTIFACTORY_USERNAME:-}" ] && [ -n "${ARTIFACTORY_PASSWORD:-}" ]; then
            dotnet nuget remove source nuget-all || true
          else
            echo "Artifactory credentials not set; nothing to remove"
          fi
